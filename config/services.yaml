# Learn more about services, parameters and containers at
# http://symfony.com/doc/current/service_container.html
imports:
    - { resource: ./packages/admin_blocks.yaml }
# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'ru'
    upload_directory: '%kernel.project_dir%/public/images'
    upload_image_directory: '/images/'
    secret: '%env(APP_SECRET)%'
    jwt_private_key_path: './jwt/private.pem' # ssh private key path
    jwt_public_key_path:  './jwt/public.pem'  # ssh public key path
    jwt_key_pass_phrase:  ''                                         # ssh key pass phrase
    jwt_token_ttl:        3600

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{Entity,Migrations,Tests,Form,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    app.file_upload:
        class:  App\Upload\FileUpload
        arguments: ['@images_filesystem']
        public: true

    app.helper.login_helper:
        class:  App\Helper\LoginHelper
        arguments: ['@service_container', '@doctrine.orm.entity_manager']

    app.helper.user_support_helper:
        class:  App\Helper\UserSupportHelper
        arguments: ['@doctrine.orm.entity_manager', '@app.file_upload', '@mailer']
        public: true

    app.helper.stake_helper:
        class:  App\Helper\StakeHelper
        arguments: ['@doctrine.orm.entity_manager']

    app.helper.resize_image_helper:
        class:  App\Helper\ResizeImageHelper
        arguments: ['@app.file_upload', '%upload_directory%']
        public: true

    app.socket.helper:
        class:  App\Socket\SocketHelper
        arguments: ['@service_container']

    App\Twig\ImageUrlExtension:
        class: App\Twig\ImageUrlExtension
        arguments: ['%upload_image_directory%']
        tags:
            - { name: twig.extension }

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
fos_user:
    db_driver: orm
    firewall_name: main
    user_class: App\Entity\User
    from_email:
        address: "hello@aquanote.com"
        sender_name: "AquaNote Postman"

knp_gaufrette:
    adapters:
        local_storage:
            local:
                directory: '%upload_directory%'

    filesystems:
        bar:
            adapter:    local_storage
            alias:      images_filesystem